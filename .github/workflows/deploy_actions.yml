name: Gatsby build

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  build_sync:
    name: Package install / Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: npm install
        run: npm ci
      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-
      - name: npm build
        run: npm run build --if-present
      # Sync with Server
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Deploy
        uses: jonelantha/gatsby-s3-action@v1
        with:
          dest-s3-bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
          cloudfront-id-to-invalidate: ${{ secrets.AWS_CLOUDFRONT_ID }}
          public-source-path: ./public/

  # Slack notification
  slack_notification:
    name: Slack notification
    if: always()
    runs-on: ubuntu-latest
    needs: build_sync
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Slack Incoming Webhook
        uses: 8398a7/action-slack@v3
        if: env.WORKFLOW_CONCLUSION == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: custom
          author_name: Github Actions infomation
          custom_payload: |
            {
              attachments: [
                {
                  pretext: "ブログの更新が完了したよ！",
                  color: "good",
                  author_name: "${{ github.actor }}",
                  author_icon: "${{ github.event.sender.avatar_url }}",
                  fields: [
                    {
                      title: "PR Title & URL",
                      value: "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }} #${{ github.event.number }}>",
                      short: false
                    },
                    {
                      title: "GitHub Actions URL",
                      value: "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}",
                      short: false
                    },
                    {
                      title: "Blog URL",
                      value: "https://blog.ue-y.me/",
                      short: false
                    }
                  ]
                }
              ] 
            }
